#!/usr/bin/env php
<?php

require __DIR__ . '/../vendor/autoload.php';

use RoundingWell\Schematic\Generator;
use RoundingWell\Schematic\Schema;

// Configuration for generator
$schemaDir = realpath(__DIR__ . '/../schema');
$targetDir = realpath(__DIR__ . '/../src');
$namespace = 'RoundingWell\\Redox';
$baseClass = 'RoundingWell\\Redox\\AbstractMessage';

// Find all schemas
$schemas = new RecursiveDirectoryIterator($schemaDir);
$schemas = new RecursiveIteratorIterator($schemas);
$schemas = new RegexIterator($schemas, '/^.+\.json$/i', RegexIterator::GET_MATCH);

// Load test template and set configuration
$testDir = realpath(__DIR__ . '/../tests');
$testCode = file_get_contents(__DIR__ . '/../tests/MessageTest.template');
$testVars = ['%group%', '%message%'];

$generator = new Generator();
foreach ($schemas as $schemaFile => $_) {
    $relativePath = trim(str_replace($schemaDir, '', $schemaFile), '/');
    $groupName = pathinfo($relativePath, PATHINFO_DIRNAME);
    $messageName = pathinfo($relativePath, PATHINFO_FILENAME);
    $messageClass = "$namespace\\Message\\$groupName\\$messageName";
    $testReplacements = [
        $groupName,
        $messageName,
    ];

    echo "Generating $groupName $messageName\n";
    $schema = Schema::fromFile($schemaFile);
    $classes = $generator->generate($schema, $messageClass, $baseClass);
    echo " classes ", str_repeat('.', count($classes));
    $files = $generator->write($classes, $targetDir, $namespace);
    echo " ✔\n";
    echo " test";
    file_put_contents(
        "$testDir/{$messageName}Test.php",
        str_replace($testVars, $testReplacements, $testCode)
    );
    echo " ✔\n";
}
